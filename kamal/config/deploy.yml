# yaml-language-server: $schema=https://json.schemastore.org/yamllint.json
# Name of your application. Used to uniquely configure containers.
# INFO: muss gleich sein zum Label "service" des zu deployende Dockerfile
#       siehe: `../../nginx/Dockerfile`
service: insimodus

# Name of the container image.
image: m324/insimodus

# Deploy to these servers.
servers:
  web:
    hosts:
      - <%= ENV.fetch('KAMAL_SERVER_IP') %>
    options:
      network: 'kamal' # INFO: needs `docker network create kamal` on the servers!

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: <%= ENV['KAMAL_REGISTRY'] || 'not-defined' %>
  username: AWS

  # Always use an access token rather than real password when possible.
  password: <%= ENV['KAMAL_REGISTRY_PASSWORD'] || 'not-defined' %>

hooks_path: ./hooks # path relative to where "kamal" command is run!

ssh:
  user: ubuntu
  # keys_only: true
  # keys: ["~/.ssh/id_rsa.pem"]

# Configure custom arguments for Traefik. Be sure to reboot traefik when you modify it.
traefik:
  labels:
    traefik.http.services.insimodus-web.loadbalancer.server.port: 3000
  options:
    network: 'kamal' # INFO: needs `docker network create kamal` on the servers!

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /up
  port: 3000
# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
# INFO: Uncomment to add mysql to the server
#       Also add all envs as GitHub Environment vars.
# env:
#   secret:
#     - MYSQL_USER
#     - MYSQL_PASSWORD
#     - MYSQL_DATABASE

# Use accessory services (secrets come from .env).
# INFO: Uncomment to add mysql to the server
#       Also add all envs as GitHub Environment vars.
# accessories:
#   mysql:
#     image: mysql:8.0
#     host: <%= ENV.fetch('KAMAL_SERVER_IP') %>
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: "%"
#       secret:
#         - MYSQL_ROOT_PASSWORD
#         - MYSQL_USER
#         - MYSQL_PASSWORD
#         - MYSQL_DATABASE
#     options:
#       network: "kamal" # INFO: needs `docker network create kamal` on the servers!
#     directories:
#       - data:/var/lib/mysql

# INFO: Not used in our setup as we build isolated
# Configure builder setup.
# builder:
#   context: ../nginx
#   dockerfile: ../nginx/Dockerfile
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1
